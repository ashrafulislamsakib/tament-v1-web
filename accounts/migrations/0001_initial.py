# Generated by Django 3.2.5 on 2022-01-13 10:30

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(db_index=True, max_length=255, primary_key=True, serialize=False, unique=True, verbose_name='username')),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, verbose_name='email')),
                ('enable_notifications', models.BooleanField(default=True, verbose_name='is notification enabled ?')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='first_name')),
                ('last_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='last_name')),
                ('is_active', models.BooleanField(default=True, verbose_name='is user active ?')),
                ('is_staff', models.BooleanField(default=False, verbose_name='is staff of site ?')),
                ('is_verified', models.BooleanField(default=False, verbose_name='is verified ?')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='joined')),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('avatar', models.FileField(blank=True, default='accounts/user.png', null=True, upload_to='accounts', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'png', 'jpeg'])], verbose_name='user avatar')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SignupCode',
            fields=[
                ('code', models.CharField(editable=False, max_length=6, primary_key=True, serialize=False, verbose_name='code')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PasswordResetCode',
            fields=[
                ('code', models.CharField(editable=False, max_length=6, primary_key=True, serialize=False, verbose_name='code')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EmailChangeCode',
            fields=[
                ('code', models.CharField(editable=False, max_length=6, primary_key=True, serialize=False, verbose_name='code')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('email', models.EmailField(max_length=255, verbose_name='email address')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
